/**
 * This class is generated by jOOQ
 */
package hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables.records;


import hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables.UserBloodPressure;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserBloodPressureRecord extends UpdatableRecordImpl<UserBloodPressureRecord> implements Record5<Integer, Integer, Integer, Timestamp, Integer> {

	private static final long serialVersionUID = -1843529547;

	/**
	 * Setter for <code>healthmon.user_blood_pressure.user_blood_pressure_id</code>.
	 */
	public UserBloodPressureRecord setUserBloodPressureId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>healthmon.user_blood_pressure.user_blood_pressure_id</code>.
	 */
	public Integer getUserBloodPressureId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>healthmon.user_blood_pressure.diastolic</code>.
	 */
	public UserBloodPressureRecord setDiastolic(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>healthmon.user_blood_pressure.diastolic</code>.
	 */
	public Integer getDiastolic() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>healthmon.user_blood_pressure.systolic</code>.
	 */
	public UserBloodPressureRecord setSystolic(Integer value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>healthmon.user_blood_pressure.systolic</code>.
	 */
	public Integer getSystolic() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>healthmon.user_blood_pressure.insert_date</code>.
	 */
	public UserBloodPressureRecord setInsertDate(Timestamp value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>healthmon.user_blood_pressure.insert_date</code>.
	 */
	public Timestamp getInsertDate() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>healthmon.user_blood_pressure.user_id</code>.
	 */
	public UserBloodPressureRecord setUserId(Integer value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>healthmon.user_blood_pressure.user_id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Timestamp, Integer> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, Integer, Timestamp, Integer> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return UserBloodPressure.USER_BLOOD_PRESSURE.USER_BLOOD_PRESSURE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return UserBloodPressure.USER_BLOOD_PRESSURE.DIASTOLIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return UserBloodPressure.USER_BLOOD_PRESSURE.SYSTOLIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return UserBloodPressure.USER_BLOOD_PRESSURE.INSERT_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return UserBloodPressure.USER_BLOOD_PRESSURE.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getUserBloodPressureId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDiastolic();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getSystolic();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getInsertDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord value1(Integer value) {
		setUserBloodPressureId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord value2(Integer value) {
		setDiastolic(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord value3(Integer value) {
		setSystolic(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord value4(Timestamp value) {
		setInsertDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord value5(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserBloodPressureRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4, Integer value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserBloodPressureRecord
	 */
	public UserBloodPressureRecord() {
		super(UserBloodPressure.USER_BLOOD_PRESSURE);
	}

	/**
	 * Create a detached, initialised UserBloodPressureRecord
	 */
	public UserBloodPressureRecord(Integer userBloodPressureId, Integer diastolic, Integer systolic, Timestamp insertDate, Integer userId) {
		super(UserBloodPressure.USER_BLOOD_PRESSURE);

		setValue(0, userBloodPressureId);
		setValue(1, diastolic);
		setValue(2, systolic);
		setValue(3, insertDate);
		setValue(4, userId);
	}
}
