/**
 * This class is generated by jOOQ
 */
package hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables;


import hr.fer.zpr.marinpetrunic.healthmon.database.generated.Healthmon;
import hr.fer.zpr.marinpetrunic.healthmon.database.generated.Keys;
import hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables.records.UserHeartRateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserHeartRate extends TableImpl<UserHeartRateRecord> {

	private static final long serialVersionUID = -714178371;

	/**
	 * The reference instance of <code>healthmon.user_heart_rate</code>
	 */
	public static final UserHeartRate USER_HEART_RATE = new UserHeartRate();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserHeartRateRecord> getRecordType() {
		return UserHeartRateRecord.class;
	}

	/**
	 * The column <code>healthmon.user_heart_rate.user_heart_rate_id</code>.
	 */
	public final TableField<UserHeartRateRecord, Integer> USER_HEART_RATE_ID = createField("user_heart_rate_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>healthmon.user_heart_rate.heart_rate</code>.
	 */
	public final TableField<UserHeartRateRecord, Integer> HEART_RATE = createField("heart_rate", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>healthmon.user_heart_rate.insert_date</code>.
	 */
	public final TableField<UserHeartRateRecord, Timestamp> INSERT_DATE = createField("insert_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>healthmon.user_heart_rate.user_id</code>.
	 */
	public final TableField<UserHeartRateRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>healthmon.user_heart_rate</code> table reference
	 */
	public UserHeartRate() {
		this("user_heart_rate", null);
	}

	/**
	 * Create an aliased <code>healthmon.user_heart_rate</code> table reference
	 */
	public UserHeartRate(String alias) {
		this(alias, USER_HEART_RATE);
	}

	private UserHeartRate(String alias, Table<UserHeartRateRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserHeartRate(String alias, Table<UserHeartRateRecord> aliased, Field<?>[] parameters) {
		super(alias, Healthmon.HEALTHMON, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserHeartRateRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USER_HEART_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserHeartRateRecord> getPrimaryKey() {
		return Keys.KEY_USER_HEART_RATE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserHeartRateRecord>> getKeys() {
		return Arrays.<UniqueKey<UserHeartRateRecord>>asList(Keys.KEY_USER_HEART_RATE_PRIMARY, Keys.KEY_USER_HEART_RATE_USER_HEART_RATE_ID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserHeartRateRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserHeartRateRecord, ?>>asList(Keys.FK_USER_HEART_RATE_USER1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserHeartRate as(String alias) {
		return new UserHeartRate(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserHeartRate rename(String name) {
		return new UserHeartRate(name, null);
	}
}
