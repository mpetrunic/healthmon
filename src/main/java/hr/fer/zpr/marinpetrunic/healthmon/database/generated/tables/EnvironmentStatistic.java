/**
 * This class is generated by jOOQ
 */
package hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables;


import hr.fer.zpr.marinpetrunic.healthmon.database.generated.Healthmon;
import hr.fer.zpr.marinpetrunic.healthmon.database.generated.Keys;
import hr.fer.zpr.marinpetrunic.healthmon.database.generated.tables.records.EnvironmentStatisticRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnvironmentStatistic extends TableImpl<EnvironmentStatisticRecord> {

	private static final long serialVersionUID = 14744741;

	/**
	 * The reference instance of <code>healthmon.environment_statistic</code>
	 */
	public static final EnvironmentStatistic ENVIRONMENT_STATISTIC = new EnvironmentStatistic();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EnvironmentStatisticRecord> getRecordType() {
		return EnvironmentStatisticRecord.class;
	}

	/**
	 * The column <code>healthmon.environment_statistic.id</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>healthmon.environment_statistic.temperature</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Double> TEMPERATURE = createField("temperature", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>healthmon.environment_statistic.humidity</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Double> HUMIDITY = createField("humidity", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>healthmon.environment_statistic.air_pressure</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Integer> AIR_PRESSURE = createField("air_pressure", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>healthmon.environment_statistic.insert_date</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Timestamp> INSERT_DATE = createField("insert_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>healthmon.environment_statistic.location_id</code>.
	 */
	public final TableField<EnvironmentStatisticRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>healthmon.environment_statistic</code> table reference
	 */
	public EnvironmentStatistic() {
		this("environment_statistic", null);
	}

	/**
	 * Create an aliased <code>healthmon.environment_statistic</code> table reference
	 */
	public EnvironmentStatistic(String alias) {
		this(alias, ENVIRONMENT_STATISTIC);
	}

	private EnvironmentStatistic(String alias, Table<EnvironmentStatisticRecord> aliased) {
		this(alias, aliased, null);
	}

	private EnvironmentStatistic(String alias, Table<EnvironmentStatisticRecord> aliased, Field<?>[] parameters) {
		super(alias, Healthmon.HEALTHMON, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EnvironmentStatisticRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ENVIRONMENT_STATISTIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EnvironmentStatisticRecord> getPrimaryKey() {
		return Keys.KEY_ENVIRONMENT_STATISTIC_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EnvironmentStatisticRecord>> getKeys() {
		return Arrays.<UniqueKey<EnvironmentStatisticRecord>>asList(Keys.KEY_ENVIRONMENT_STATISTIC_PRIMARY, Keys.KEY_ENVIRONMENT_STATISTIC_ID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EnvironmentStatisticRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EnvironmentStatisticRecord, ?>>asList(Keys.FK_ENVIROMENT_STATISTIC_LOCATION1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EnvironmentStatistic as(String alias) {
		return new EnvironmentStatistic(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EnvironmentStatistic rename(String name) {
		return new EnvironmentStatistic(name, null);
	}
}
